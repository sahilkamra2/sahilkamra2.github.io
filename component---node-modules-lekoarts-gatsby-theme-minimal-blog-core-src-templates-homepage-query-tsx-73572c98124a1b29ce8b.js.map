{"version":3,"sources":["webpack:///./src/hooks/use-site-metadata.tsx","webpack:///./src/components/seo.tsx","webpack:///./src/components/colormode-toggle.tsx","webpack:///./src/hooks/use-navigation.tsx","webpack:///./src/utils/replaceSlashes.ts","webpack:///./src/components/navigation.tsx","webpack:///./src/components/header.tsx","webpack:///./src/components/footer.tsx","webpack:///./src/styles/code.ts","webpack:///./src/components/skip-nav.tsx","webpack:///./src/components/layout.tsx","webpack:///./src/texts/hero.mdx","webpack:///./src/texts/bottom.mdx","webpack:///./src/components/title.tsx","webpack:///./src/components/item-tags.tsx","webpack:///./src/components/blog-list-item.tsx","webpack:///./src/components/listing.tsx","webpack:///./src/components/list.tsx","webpack:///./src/components/homepage.tsx","webpack:///./node_modules/@lekoarts/gatsby-theme-minimal-blog-core/src/templates/homepage-query.tsx","webpack:///./src/@lekoarts/gatsby-theme-minimal-blog-core/components/homepage.tsx"],"names":["useSiteMetadata","site","siteMetadata","SEO","title","description","pathname","image","children","siteTitle","defaultTitle","siteTitleAlt","siteUrl","defaultDescription","siteDescription","siteLanguage","defaultImage","siteImage","author","seo","url","titleTemplate","lang","name","content","property","rel","type","sizes","href","defaultProps","ColorModeToggle","isDark","toggle","onClick","aria-label","sx","opacity","position","borderRadius","width","height","display","alignItems","justifyContent","transition","border","outline","background","cursor","padding","appearance","t","colors","toggleIcon","backgroundColor","transform","overflow","boxShadow","right","top","margin","left","useNavigation","navigation","replaceSlashes","input","replace","Navigation","nav","basePath","mr","fontSize","color","map","item","a","key","slug","as","Link","activeClassName","to","Header","externalLinks","useColorMode","colorMode","setColorMode","mb","textDecoration","my","fontWeight","e","preventDefault","boxSizing","variant","mt","flexFlow","ml","link","Footer","flexDirection","Date","getFullYear","space","tint","webkitOverflowScrolling","float","minWidth","pl","bg","px","py","mx","letterSpacing","textAlign","textTransform","wordSpacing","wordBreak","overflowWrap","lineHeight","tabSize","hyphens","userSelect","fontFamily","pr","borderLeft","skipNavStyles","clip","zIndex","SkipNavLink","props","data-skip-link","Layout","className","root","data-testid","styles","css","body","textRendering","id","CodeStyles","Text","console","warn","layoutProps","_frontmatter","MDXContent","components","mdxType","isMDXComponent","Title","makeShortcode","text","parentName","borderBottomStyle","borderBottomWidth","borderBottomColor","pb","ItemTags","tags","tagsPath","Fragment","tag","i","BlogListItem","post","showTags","date","Listing","posts","List","ul","li","listStyle","Homepage","blogPath","p","HomepageComponent","allPost","data","nodes","query"],"mappings":"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","file":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-homepage-query-tsx-73572c98124a1b29ce8b.js","sourcesContent":["import { graphql, useStaticQuery } from \"gatsby\"\n\ntype Props = {\n  site: {\n    siteMetadata: {\n      siteTitle: string\n      siteTitleAlt: string\n      siteHeadline: string\n      siteUrl: string\n      siteDescription: string\n      siteLanguage: string\n      siteImage: string\n      author: string\n      externalLinks: {\n        name: string\n        url: string\n      }[]\n      tagsPath: string\n      basePath: string\n      blogPath: string\n      showLineNumbers: boolean\n    }\n  }\n}\n\nconst useSiteMetadata = () => {\n  const data = useStaticQuery<Props>(graphql`\n    query {\n      site {\n        siteMetadata {\n          siteTitle\n          siteTitleAlt\n          siteHeadline\n          siteUrl\n          siteDescription\n          siteLanguage\n          siteImage\n          author\n          externalLinks {\n            name\n            url\n          }\n          tagsPath\n          basePath\n          blogPath\n         \n        }\n      }\n    }\n  `)\n\n  return data.site.siteMetadata\n}\n\nexport default useSiteMetadata\n","import React from \"react\"\nimport Helmet from \"react-helmet\"\nimport useSiteMetadata from \"../hooks/use-site-metadata\"\n\nconst defaultProps = {\n  title: ``,\n  description: false,\n  pathname: false,\n  image: false,\n  children: null,\n}\n\ntype Props = {\n  title?: string\n  description?: string\n  pathname?: string\n  image?: string\n  children?: React.ReactNode\n}\n\nconst SEO = ({ title, description, pathname, image, children }: Props) => {\n  const site = useSiteMetadata()\n\n  const {\n    siteTitle,\n    siteTitleAlt: defaultTitle,\n    siteUrl,\n    siteDescription: defaultDescription,\n    siteLanguage,\n    siteImage: defaultImage,\n    author,\n  } = site\n\n  const seo = {\n    title: title || defaultTitle,\n    description: description || defaultDescription,\n    url: `${siteUrl}${pathname || ``}`,\n    image: `${siteUrl}${image || defaultImage}`,\n  }\n  return (\n    <Helmet title={title} defaultTitle={defaultTitle} titleTemplate={`%s | ${siteTitle}`}>\n      <html lang={siteLanguage} />\n      <meta name=\"description\" content={seo.description} />\n      <meta name=\"image\" content={seo.image} />\n      <meta property=\"og:title\" content={seo.title} />\n      <meta property=\"og:url\" content={seo.url} />\n      <meta property=\"og:description\" content={seo.description} />\n      <meta property=\"og:image\" content={seo.image} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta property=\"og:image:alt\" content={seo.description} />\n      <meta name=\"twitter:card\" content=\"summary_large_image\" />\n      <meta name=\"twitter:title\" content={seo.title} />\n      <meta name=\"twitter:url\" content={seo.url} />\n      <meta name=\"twitter:description\" content={seo.description} />\n      <meta name=\"twitter:image\" content={seo.image} />\n      <meta name=\"twitter:image:alt\" content={seo.description} />\n      <meta name=\"twitter:creator\" content={author} />\n      <meta name=\"gatsby-theme\" content=\"@lekoarts/gatsby-theme-minimal-blog\" />\n      <link rel=\"icon\" type=\"image/png\" sizes=\"32x32\" href=\"/favicon-32x32.png\" />\n      <link rel=\"icon\" type=\"image/png\" sizes=\"16x16\" href=\"/favicon-16x16.png\" />\n      <link rel=\"apple-touch-icon\" sizes=\"180x180\" href=\"/apple-touch-icon.png\" />\n      {children}\n    </Helmet>\n  )\n}\n\nexport default SEO\n\nSEO.defaultProps = defaultProps\n","/** @jsx jsx */\r\nimport { jsx } from \"theme-ui\"\r\n\r\ntype Props = {\r\n  isDark: boolean\r\n  toggle: (e: any) => void\r\n}\r\n\r\n// Adapted from: https://codepen.io/aaroniker/pen/KGpXZo and https://github.com/narative/gatsby-theme-novela/blob/master/%40narative/gatsby-theme-novela/src/components/Navigation/Navigation.Header.tsx\r\n\r\nconst ColorModeToggle = ({ isDark, toggle }: Props) => (\r\n  <button\r\n    onClick={toggle}\r\n    type=\"button\"\r\n    aria-label={isDark ? `Activate Light Mode` : `Activate Dark Mode`}\r\n    title={isDark ? `Activate Light Mode` : `Activate Dark Mode`}\r\n    sx={{\r\n      opacity: 0.65,\r\n      position: `relative`,\r\n      borderRadius: `5px`,\r\n      width: `40px`,\r\n      height: `25px`,\r\n      display: `flex`,\r\n      alignItems: `center`,\r\n      justifyContent: `center`,\r\n      transition: `opacity 0.3s ease`,\r\n      border: `none`,\r\n      outline: `none`,\r\n      background: `none`,\r\n      cursor: `pointer`,\r\n      padding: 0,\r\n      appearance: `none`,\r\n      \"&:hover, &:focus\": { opacity: 1 },\r\n    }}\r\n  >\r\n    <div\r\n      sx={{\r\n        position: `relative`,\r\n        width: `24px`,\r\n        height: `24px`,\r\n        borderRadius: `50%`,\r\n        border: t => (isDark ? `4px solid ${t.colors.toggleIcon}` : `none`),\r\n        backgroundColor: isDark ? `toggleIcon` : `transparent`,\r\n        transform: isDark ? `scale(0.55)` : `scale(1)`,\r\n        transition: `all 0.45s ease`,\r\n        overflow: isDark ? `visible` : `hidden`,\r\n        boxShadow: t => (isDark ? `none` : `inset 8px -8px 0px 0px ${t.colors.toggleIcon}`),\r\n        \"&:before\": {\r\n          content: `\"\"`,\r\n          position: `absolute`,\r\n          right: `-9px`,\r\n          top: `-9px`,\r\n          height: `24px`,\r\n          width: `24px`,\r\n          border: t => (isDark ? `2px solid ${t.colors.toggleIcon}` : `none`),\r\n          borderRadius: `50%`,\r\n          transform: isDark ? `translate(14px, -14px)` : `translate(0, 0)`,\r\n          opacity: isDark ? 0 : 1,\r\n          transition: `transform 0.45s ease`,\r\n        },\r\n        \"&:after\": {\r\n          content: `\"\"`,\r\n          width: `8px`,\r\n          height: `8px`,\r\n          borderRadius: `50%`,\r\n          margin: `-4px 0 0 -4px`,\r\n          position: `absolute`,\r\n          top: `50%`,\r\n          left: `50%`,\r\n          boxShadow: t =>\r\n            `0 -23px 0 ${t.colors.toggleIcon}, 0 23px 0 ${t.colors.toggleIcon}, 23px 0 0 ${t.colors.toggleIcon}, -23px 0 0 ${t.colors.toggleIcon}, 15px 15px 0 ${t.colors.toggleIcon}, -15px 15px 0 ${t.colors.toggleIcon}, 15px -15px 0 ${t.colors.toggleIcon}, -15px -15px 0 ${t.colors.toggleIcon}`,\r\n          transform: isDark ? `scale(1)` : `scale(0)`,\r\n          transition: `all 0.35s ease`,\r\n        },\r\n      }}\r\n    />\r\n  </button>\r\n)\r\n\r\nexport default ColorModeToggle\r\n","import { graphql, useStaticQuery } from \"gatsby\"\r\n\r\ntype Props = {\r\n  site: {\r\n    siteMetadata: {\r\n      navigation: {\r\n        title: string\r\n        slug: string\r\n      }[]\r\n    }\r\n  }\r\n}\r\n\r\nconst useNavigation = () => {\r\n  const data = useStaticQuery<Props>(graphql`\r\n    query {\r\n      site {\r\n        siteMetadata {\r\n          navigation {\r\n            title\r\n            slug\r\n          }\r\n        }\r\n      }\r\n    }\r\n  `)\r\n\r\n  return data.site.siteMetadata.navigation\r\n}\r\n\r\nexport default useNavigation\r\n","/**\r\n * Replace double slashes // with one slash /\r\n * @description This prevents double slashes as users might add e.g. the basePath as \"/blog\" or \"blog\"\r\n * @param input\r\n * @return {string} - Sanitized string\r\n */\r\nfunction replaceSlashes(input: string): string {\r\n  return input.replace(/\\/\\/+/g, `/`)\r\n}\r\n\r\nexport default replaceSlashes\r\n","/** @jsx jsx */\r\nimport { jsx, Styled } from \"theme-ui\"\r\nimport { Link } from \"gatsby\"\r\nimport useSiteMetadata from \"../hooks/use-site-metadata\"\r\nimport replaceSlashes from \"../utils/replaceSlashes\"\r\n\r\ntype NavigationProps = {\r\n  nav: {\r\n    title: string\r\n    slug: string\r\n  }[]\r\n}\r\n\r\nconst Navigation = ({ nav }: NavigationProps) => {\r\n  const { basePath } = useSiteMetadata()\r\n\r\n  return (\r\n    <nav sx={{ \"a:not(:last-of-type)\": { mr: 3 }, fontSize: [1, `18px`], \".active\": { color: `heading` } }}>\r\n      {nav.map(item => (\r\n        <Styled.a key={item.slug} as={Link} activeClassName=\"active\" to={replaceSlashes(`/${basePath}/${item.slug}`)}>\r\n          {item.title}\r\n        </Styled.a>\r\n      ))}\r\n    </nav>\r\n  )\r\n}\r\n\r\nexport default Navigation\r\n","/** @jsx jsx */\r\nimport { jsx, useColorMode, Styled } from \"theme-ui\"\r\nimport { Link } from \"gatsby\"\r\nimport { Flex } from \"@theme-ui/components\"\r\nimport useSiteMetadata from \"../hooks/use-site-metadata\"\r\nimport ColorModeToggle from \"./colormode-toggle\"\r\nimport useNavigation from \"../hooks/use-navigation\"\r\nimport Navigation from \"./navigation\"\r\nimport replaceSlashes from \"../utils/replaceSlashes\"\r\n\r\nconst Header = () => {\r\n  const { siteTitle, externalLinks, basePath } = useSiteMetadata()\r\n  const nav = useNavigation()\r\n  const [colorMode, setColorMode] = useColorMode()\r\n  const isDark = colorMode === `dark`\r\n  const toggleColorMode = (e: any) => {\r\n    e.preventDefault()\r\n    setColorMode(isDark ? `light` : `dark`)\r\n  }\r\n\r\n  return (\r\n    <header sx={{ mb: [5, 6] }}>\r\n      <Flex sx={{ alignItems: `center`, justifyContent: `space-between` }}>\r\n        <Link\r\n          to={replaceSlashes(`/${basePath}`)}\r\n          aria-label={`${siteTitle} - Back to home`}\r\n          sx={{ color: `heading`, textDecoration: `none` }}\r\n        >\r\n          <h1 sx={{ my: 0, fontWeight: `medium`, fontSize: [3, 4] }}>{siteTitle}</h1>\r\n        </Link>\r\n        <ColorModeToggle isDark={isDark} toggle={toggleColorMode} />\r\n      </Flex>\r\n      <div\r\n        sx={{\r\n          boxSizing: `border-box`,\r\n          display: `flex`,\r\n          variant: `dividers.bottom`,\r\n          alignItems: `center`,\r\n          justifyContent: `space-between`,\r\n          mt: 3,\r\n          color: `secondary`,\r\n          a: { color: `secondary`, \":hover\": { color: `heading` } },\r\n          flexFlow: `wrap`,\r\n        }}\r\n      >\r\n        <Navigation nav={nav} />\r\n        <div sx={{ \"a:not(:first-of-type)\": { ml: 3 }, fontSize: [1, `18px`] }}>\r\n          {externalLinks.map(link => (\r\n            <Styled.a key={link.url} href={link.url}>\r\n              {link.name}\r\n            </Styled.a>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </header>\r\n  )\r\n}\r\n\r\nexport default Header\r\n","/** @jsx jsx */\r\nimport { jsx, Styled } from \"theme-ui\"\r\nimport useSiteMetadata from \"../hooks/use-site-metadata\"\r\n\r\nconst Footer = () => {\r\n  const { siteTitle } = useSiteMetadata()\r\n\r\n  return (\r\n    <footer\r\n      sx={{\r\n        boxSizing: `border-box`,\r\n        display: `flex`,\r\n        justifyContent: `space-between`,\r\n        mt: [6],\r\n        color: `secondary`,\r\n        a: {\r\n          variant: `links.secondary`,\r\n        },\r\n        flexDirection: [`column`, `column`, `row`],\r\n        variant: `dividers.top`,\r\n      }}\r\n    >\r\n      <div>\r\n        &copy; {new Date().getFullYear()} by {siteTitle}. All rights reserved.\r\n      </div>\r\n      <div>\r\n        <Styled.a\r\n          aria-label=\"Link to the theme's GitHub repository\"\r\n          href=\"\"\r\n        >\r\n          {/* Theme */}\r\n        </Styled.a>\r\n        {` `}\r\n        {/* by */}\r\n        {` `}\r\n        <Styled.a aria-label=\"Link to the theme author's website\" href=\"\">\r\n          {/* LekoArts */}\r\n        </Styled.a>\r\n      </div>\r\n    </footer>\r\n  )\r\n}\r\n\r\nexport default Footer\r\n","import { tint } from \"@theme-ui/color\"\r\n\r\nexport default {\r\n  \"[data-name='live-editor']\": {\r\n    fontSize: 1,\r\n    \"textarea, pre\": {\r\n      padding: (t: any) => `${t.space[3]} !important`,\r\n    },\r\n  },\r\n  \"[data-name='live-preview']\": {\r\n    padding: (t: any) => `calc(${t.space[2]} + 10px) !important`,\r\n    backgroundColor: tint(`primary`, 0.7),\r\n  },\r\n  \".prism-code\": {\r\n    fontSize: 1,\r\n    padding: 3,\r\n    webkitOverflowScrolling: `touch`,\r\n    backgroundColor: `transparent`,\r\n    overflow: `initial`,\r\n    float: `left`,\r\n    minWidth: `100%`,\r\n    mb: 0,\r\n    '&[data-linenumber=\"false\"]': {\r\n      \".token-line\": {\r\n        pl: 3,\r\n      },\r\n    },\r\n  },\r\n  \".token\": {\r\n    display: `inline-block`,\r\n  },\r\n  \"p > code, li > code\": {\r\n    bg: `rgb(1, 22, 39)`,\r\n    color: `rgb(214, 222, 235)`,\r\n    px: 2,\r\n    py: 1,\r\n  },\r\n  \".gatsby-highlight\": {\r\n    fontSize: 1,\r\n    position: `relative`,\r\n    webkitOverflowScrolling: `touch`,\r\n    bg: `rgb(1, 22, 39)`,\r\n    overflow: `auto`,\r\n    mx: [0, 0, 0, -3],\r\n    \".token-line\": {\r\n      mx: -3,\r\n    },\r\n    \"pre.language-\": {\r\n      mt: 0,\r\n    },\r\n    \"pre.language-noLineNumbers\": {\r\n      mt: 0,\r\n    },\r\n    'pre[class*=\"language-\"]:before': {\r\n      bg: `white`,\r\n      borderRadius: `0 0 0.25rem 0.25rem`,\r\n      color: `black`,\r\n      fontSize: `12px`,\r\n      letterSpacing: `0.025rem`,\r\n      padding: `0.1rem 0.5rem`,\r\n      position: `absolute`,\r\n      left: `1rem`,\r\n      textAlign: `right`,\r\n      textTransform: `uppercase`,\r\n      top: 0,\r\n    },\r\n    'pre[class~=\"language-javascript\"]:before': {\r\n      content: `\"js\"`,\r\n      background: `#f7df1e`,\r\n      color: `black`,\r\n    },\r\n    'pre[class~=\"language-js\"]:before': {\r\n      content: `\"js\"`,\r\n      background: `#f7df1e`,\r\n      color: `black`,\r\n    },\r\n    'pre[class~=\"language-jsx\"]:before': {\r\n      content: `\"jsx\"`,\r\n      background: `#61dafb`,\r\n      color: `black`,\r\n    },\r\n    'pre[class~=\"language-ts\"]:before': {\r\n      content: `\"ts\"`,\r\n      background: `#61dafb`,\r\n      color: `black`,\r\n    },\r\n    'pre[class~=\"language-tsx\"]:before': {\r\n      content: `\"tsx\"`,\r\n      background: `#61dafb`,\r\n      color: `black`,\r\n    },\r\n    'pre[class~=\"language-html\"]:before': {\r\n      content: `\"html\"`,\r\n      background: `#005a9c`,\r\n      color: `white`,\r\n    },\r\n    'pre[class~=\"language-graphql\"]:before': {\r\n      content: `\"GraphQL\"`,\r\n      background: `#E10098`,\r\n    },\r\n    'pre[class~=\"language-css\"]:before': {\r\n      content: `\"css\"`,\r\n      background: `#ff9800`,\r\n      color: `black`,\r\n    },\r\n    'pre[class~=\"language-mdx\"]:before': {\r\n      content: `\"mdx\"`,\r\n      background: `#f9ac00`,\r\n      color: `black`,\r\n    },\r\n    'pre[class~=\"language-text\"]:before': {\r\n      content: `\"text\"`,\r\n    },\r\n    \"pre[class~='language-shell']:before\": {\r\n      content: `'shell'`,\r\n    },\r\n    \"pre[class~='language-sh']:before\": {\r\n      content: `'sh'`,\r\n    },\r\n    \"pre[class~='language-bash']:before\": {\r\n      content: `'bash'`,\r\n    },\r\n    \"pre[class~='language-yaml']:before\": {\r\n      content: `'yaml'`,\r\n      background: `#ffa8df`,\r\n    },\r\n    \"pre[class~='language-markdown']:before\": {\r\n      content: `'md'`,\r\n    },\r\n    \"pre[class~='language-json']:before, pre[class~='language-json5']:before\": {\r\n      content: `'json'`,\r\n      background: `linen`,\r\n    },\r\n    \"pre[class~='language-diff']:before\": {\r\n      content: `'diff'`,\r\n      background: `#e6ffed`,\r\n    },\r\n  },\r\n  '.gatsby-highlight > code[class*=\"language-\"], .gatsby-highlight > pre[class=*=\"language-\"]': {\r\n    wordSpacing: `normal`,\r\n    wordBreak: `normal`,\r\n    overflowWrap: `normal`,\r\n    lineHeight: 1.5,\r\n    tabSize: 4,\r\n    hyphens: `none`,\r\n  },\r\n  \".line-number-style\": {\r\n    display: `inline-block`,\r\n    width: `3em`,\r\n    userSelect: `none`,\r\n    opacity: 0.3,\r\n    textAlign: `center`,\r\n    position: `relative`,\r\n  },\r\n  \".code-title\": {\r\n    backgroundColor: tint(`primary`, 0.7),\r\n    color: `black`,\r\n    fontSize: 0,\r\n    px: 3,\r\n    py: 2,\r\n    fontFamily: `monospace`,\r\n    mx: [0, 0, 0, -3],\r\n  },\r\n  \"[data-name='live-preview'], [data-name='live-editor']\": {\r\n    mx: [0, 0, 0, -3],\r\n  },\r\n  \".token-line\": {\r\n    pr: 3,\r\n  },\r\n  \".highlight-line\": {\r\n    backgroundColor: `rgb(2, 55, 81)`,\r\n    borderLeft: `4px solid rgb(2, 155, 206)`,\r\n    \".line-number-style\": {\r\n      width: `calc(3em - 4px)`,\r\n      opacity: 0.5,\r\n      left: `-2px`,\r\n    },\r\n  },\r\n}\r\n","/** @jsx jsx */\r\nimport { jsx } from \"theme-ui\"\r\nimport React from \"react\"\r\n\r\ntype SkipNavLinkProps = {\r\n  children: React.ReactNode\r\n}\r\n\r\nconst skipNavStyles = {\r\n  border: 0,\r\n  clip: `react(0 0 0 0)`,\r\n  height: `1px`,\r\n  width: `1px`,\r\n  margin: `-1px`,\r\n  padding: 0,\r\n  overflow: `hidden`,\r\n  position: `absolute`,\r\n  \"&:focus\": {\r\n    padding: 3,\r\n    position: `fixed`,\r\n    top: `15px`,\r\n    left: `15px`,\r\n    backgroundColor: `heading`,\r\n    color: `background`,\r\n    zIndex: 1,\r\n    width: `auto`,\r\n    height: `auto`,\r\n    clip: `auto`,\r\n    textDecoration: `none`,\r\n  },\r\n}\r\n\r\nconst SkipNavLink = ({ children, ...props }: SkipNavLinkProps) => (\r\n  <a {...props} sx={{ ...skipNavStyles }} href=\"#skip-nav\" data-skip-link=\"true\">\r\n    {children}\r\n  </a>\r\n)\r\n\r\nexport default SkipNavLink\r\n","import React from \"react\"\r\nimport { Global } from \"@emotion/core\"\r\nimport { Main, Styled, Container, css } from \"theme-ui\"\r\nimport \"typeface-ibm-plex-sans\"\r\nimport SEO from \"./seo\"\r\nimport Header from \"./header\"\r\nimport Footer from \"./footer\"\r\nimport CodeStyles from \"../styles/code\"\r\nimport SkipNavLink from \"./skip-nav\"\r\n\r\ntype LayoutProps = { children: React.ReactNode; className?: string }\r\n\r\nconst Layout = ({ children, className }: LayoutProps) => (\r\n  <Styled.root data-testid=\"theme-root\">\r\n    <Global\r\n      styles={css({\r\n        \"*\": {\r\n          boxSizing: `inherit`,\r\n        },\r\n        body: {\r\n          margin: 0,\r\n          padding: 0,\r\n          boxSizing: `border-box`,\r\n          textRendering: `optimizeLegibility`,\r\n        },\r\n        \"::selection\": {\r\n          backgroundColor: `primary`,\r\n          color: `white`,\r\n        },\r\n        a: {\r\n          transition: `all 0.3s ease-in-out`,\r\n          color: `text`,\r\n        },\r\n      })}\r\n    />\r\n    <SEO />\r\n    <SkipNavLink>Skip to content</SkipNavLink>\r\n    <Container>\r\n      <Header />\r\n      <Main id=\"skip-nav\" css={css({ ...CodeStyles })} className={className}>\r\n        {children}\r\n      </Main>\r\n      <Footer />\r\n    </Container>\r\n  </Styled.root>\r\n)\r\n\r\nexport default Layout\r\n","import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst Text = makeShortcode(\"Text\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <Text sx={{\n      fontSize: [4, 5, 6],\n      fontWeight: `bold`,\n      color: `heading`\n    }} mdxType=\"Text\">\n  Hi.\n    </Text>\n    <p>{`I'm Sahil`}</p>\n    <p>{`I talk about entrepreneurship, marketing, psychology and philosophy`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst Title = makeShortcode(\"Title\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <Title text=\"Projects\" mdxType=\"Title\" />\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://www.lekoarts.de/en/projects/docma-award-super-short-story-telling-about-harry-potter\"\n        }}>{`Super Short Story Telling: Harry Potter`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://www.lekoarts.de/en/projects/private-instagram-project-proprius\"\n        }}>{`Instagram Project \"Proprius\"`}</a></li>\n    </ul>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","/** @jsx jsx */\r\nimport React from \"react\"\r\nimport { jsx } from \"theme-ui\"\r\nimport { Box } from \"@theme-ui/components\"\r\n\r\ntype TitleProps = {\r\n  children?: React.ReactNode\r\n  as?: string\r\n  className?: string\r\n  text: string\r\n}\r\n\r\nconst Title = ({ text, children, as = `h2`, className }: TitleProps) => (\r\n  <div\r\n    sx={{\r\n      justifyContent: `space-between`,\r\n      alignItems: `center`,\r\n      borderBottomStyle: `solid`,\r\n      borderBottomWidth: `1px`,\r\n      borderBottomColor: `divide`,\r\n      pb: 3,\r\n      mb: 4,\r\n      flexFlow: `wrap`,\r\n      boxSizing: `border-box`,\r\n      display: `flex`,\r\n    }}\r\n  >\r\n    <Box\r\n      as={as}\r\n      sx={{ fontWeight: `medium`, fontSize: [3, 4], fontFamily: `heading`, lineHeight: `heading`, color: `heading` }}\r\n      className={className}\r\n    >\r\n      {text}\r\n    </Box>\r\n    <div\r\n      sx={{\r\n        color: `secondary`,\r\n        a: {\r\n          variant: `links.secondary`,\r\n        },\r\n      }}\r\n    >\r\n      {children}\r\n    </div>\r\n  </div>\r\n)\r\n\r\nexport default Title\r\n","import React from \"react\"\r\nimport { Styled } from \"theme-ui\"\r\nimport { Link } from \"gatsby\"\r\nimport useSiteMetadata from \"../hooks/use-site-metadata\"\r\nimport replaceSlashes from \"../utils/replaceSlashes\"\r\n\r\ntype TagsProps = {\r\n  tags: {\r\n    name: string\r\n    slug: string\r\n  }[]\r\n}\r\n\r\nconst ItemTags = ({ tags }: TagsProps) => {\r\n  const { tagsPath, basePath } = useSiteMetadata()\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {tags.map((tag, i) => (\r\n        <React.Fragment key={tag.slug}>\r\n          {!!i && `, `}\r\n          <Styled.a as={Link} to={replaceSlashes(`/${basePath}/${tagsPath}/${tag.slug}`)}>\r\n            {tag.name}\r\n          </Styled.a>\r\n        </React.Fragment>\r\n      ))}\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default ItemTags\r\n","/** @jsx jsx */\r\nimport React from \"react\"\r\nimport { jsx, Styled } from \"theme-ui\"\r\nimport { Box } from \"@theme-ui/components\"\r\nimport { Link } from \"gatsby\"\r\nimport ItemTags from \"./item-tags\"\r\n\r\ntype BlogListItemProps = {\r\n  post: {\r\n    slug: string\r\n    title: string\r\n    date: string\r\n    tags?: {\r\n      name: string\r\n      slug: string\r\n    }[]\r\n  }\r\n  showTags?: boolean\r\n}\r\n\r\nconst BlogListItem = ({ post, showTags = true }: BlogListItemProps) => (\r\n  <Box mb={4}>\r\n    <Styled.a as={Link} to={post.slug} sx={{ fontSize: [1, 2, 3], color: `text` }}>\r\n      {post.title}\r\n    </Styled.a>\r\n    <p sx={{ color: `secondary`, mt: 1, a: { color: `secondary` }, fontSize: [1, 1, 2] }}>\r\n      <time>{post.date}</time>\r\n      {post.tags && showTags && (\r\n        <React.Fragment>\r\n          {` — `}\r\n          <ItemTags tags={post.tags} />\r\n        </React.Fragment>\r\n      )}\r\n    </p>\r\n  </Box>\r\n)\r\n\r\nexport default BlogListItem\r\n","/** @jsx jsx */\r\nimport { jsx } from \"theme-ui\"\r\nimport BlogListItem from \"./blog-list-item\"\r\n\r\ntype ListingProps = {\r\n  posts: {\r\n    slug: string\r\n    title: string\r\n    date: string\r\n    tags?: {\r\n      name: string\r\n      slug: string\r\n    }[]\r\n  }[]\r\n  className?: string\r\n  showTags?: boolean\r\n}\r\n\r\nconst Listing = ({ posts, className, showTags = true }: ListingProps) => (\r\n  <section sx={{ mb: [5, 6, 7] }} className={className}>\r\n    {posts.map(post => (\r\n      <BlogListItem key={post.slug} post={post} showTags={showTags} />\r\n    ))}\r\n  </section>\r\n)\r\n\r\nexport default Listing\r\n","/** @jsx jsx */\r\nimport React from \"react\"\r\nimport { jsx } from \"theme-ui\"\r\n\r\ntype ListProps = {\r\n  children: React.ReactNode\r\n}\r\n\r\nconst List = ({ children }: ListProps) => (\r\n  <section\r\n    sx={{\r\n      mb: [5, 5, 6],\r\n      ul: { margin: 0, padding: 0 },\r\n      li: { listStyle: `none`, mb: 3 },\r\n      a: { variant: `links.listItem` },\r\n    }}\r\n  >\r\n    {children}\r\n  </section>\r\n)\r\n\r\nexport default List\r\n","/** @jsx jsx */\r\nimport { jsx } from \"theme-ui\"\r\nimport { Link } from \"gatsby\"\r\nimport Layout from \"./layout\"\r\nimport Hero from \"../texts/hero\"\r\nimport Bottom from \"../texts/bottom\"\r\nimport Title from \"./title\"\r\nimport Listing from \"./listing\"\r\nimport List from \"./list\"\r\nimport useSiteMetadata from \"../hooks/use-site-metadata\"\r\nimport replaceSlashes from \"../utils/replaceSlashes\"\r\n\r\ntype PostsProps = {\r\n  posts: {\r\n    slug: string\r\n    title: string\r\n    date: string\r\n    tags?: {\r\n      name: string\r\n      slug: string\r\n    }[]\r\n  }[]\r\n}\r\n\r\nconst Homepage = ({ posts }: PostsProps) => {\r\n  const { basePath, blogPath } = useSiteMetadata()\r\n\r\n  return (\r\n    <Layout>\r\n      <section sx={{ mb: [5, 6, 7], p: { fontSize: [1, 2, 3], mt: 2 } }}>\r\n        <Hero />\r\n      </section>\r\n      <Title text=\"Latest Posts\">\r\n        <Link to={replaceSlashes(`/${basePath}/${blogPath}`)}>Read all posts</Link>\r\n      </Title>\r\n      <Listing posts={posts} showTags={false} />\r\n      <List>\r\n        <Bottom />\r\n      </List>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default Homepage\r\n","import { graphql } from \"gatsby\"\r\nimport HomepageComponent from \"../components/homepage\"\r\n\r\nexport default HomepageComponent\r\n\r\nexport const query = graphql`\r\n  query {\r\n    allPost(sort: { fields: date, order: DESC }, limit: 3) {\r\n      nodes {\r\n        slug\r\n        title\r\n        date(formatString: \"DD.MM.YYYY\")\r\n        tags {\r\n          name\r\n          slug\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n","import React from \"react\"\r\nimport Homepage from \"../../../components/homepage\"\r\n\r\ntype Props = {\r\n  data: {\r\n    allPost: any\r\n    [key: string]: string\r\n  }\r\n}\r\n\r\nexport default ({ data }: Props) => {\r\n  const { allPost } = data\r\n\r\n  return <Homepage posts={allPost.nodes} />\r\n}\r\n"],"sourceRoot":""}